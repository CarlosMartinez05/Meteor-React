{"version":3,"sources":["meteor://ðŸ’»app/packages/webapp-hashing/webapp-hashing.js"],"names":["_objectWithoutProperties","module","link","default","v","createHash","WebAppHashing","calculateClientHash","manifest","includeFilter","runtimeConfigOverride","hash","autoupdateVersion","autoupdateVersionRefreshable","autoupdateVersionCordova","__meteor_runtime_config__","runtimeCfg","update","JSON","stringify","forEach","resource","type","replaceable","where","path","digest","calculateCordovaCompatibilityHash","platformVersion","pluginVersions","plugins","Object","keys","sort","plugin","version"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,wBAAJ;;AAA6BC,MAAM,CAACC,IAAP,CAAY,gDAAZ,EAA6D;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,4BAAwB,GAACI,CAAzB;AAA2B;;AAAvC,CAA7D,EAAsG,CAAtG;AAA7B,IAAIC,UAAJ;AAAeJ,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqB;AAACG,YAAU,CAACD,CAAD,EAAG;AAACC,cAAU,GAACD,CAAX;AAAa;;AAA5B,CAArB,EAAmD,CAAnD;AAEfE,aAAa,GAAG,EAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,aAAa,CAACC,mBAAd,GACE,UAAUC,QAAV,EAAoBC,aAApB,EAAmCC,qBAAnC,EAA0D;AAC1D,MAAIC,IAAI,GAAGN,UAAU,CAAC,MAAD,CAArB,CAD0D,CAG1D;AACA;;AACA,MAAI;AAAEO,qBAAF;AAAqBC,gCAArB;AAAmDC;AAAnD,MAA+FC,yBAAnG;AAAA,MAAoFC,UAApF,4BAAmGD,yBAAnG;;AAEA,MAAIL,qBAAJ,EAA2B;AACzBM,cAAU,GAAGN,qBAAb;AACD;;AAEDC,MAAI,CAACM,MAAL,CAAYC,IAAI,CAACC,SAAL,CAAeH,UAAf,EAA2B,MAA3B,CAAZ;AAEAR,UAAQ,CAACY,OAAT,CAAiB,UAAUC,QAAV,EAAoB;AACjC,QAAI,CAAC,CAAEZ,aAAF,IAAmBA,aAAa,CAACY,QAAQ,CAACC,IAAV,EAAgBD,QAAQ,CAACE,WAAzB,CAAjC,MACCF,QAAQ,CAACG,KAAT,KAAmB,QAAnB,IAA+BH,QAAQ,CAACG,KAAT,KAAmB,UADnD,CAAJ,EACoE;AACpEb,UAAI,CAACM,MAAL,CAAYI,QAAQ,CAACI,IAArB;AACAd,UAAI,CAACM,MAAL,CAAYI,QAAQ,CAACV,IAArB;AACD;AACF,GAND;AAOA,SAAOA,IAAI,CAACe,MAAL,CAAY,KAAZ,CAAP;AACD,CAtBD;;AAwBApB,aAAa,CAACqB,iCAAd,GACE,UAASC,eAAT,EAA0BC,cAA1B,EAA0C;AAC1C,QAAMlB,IAAI,GAAGN,UAAU,CAAC,MAAD,CAAvB;AAEAM,MAAI,CAACM,MAAL,CAAYW,eAAZ,EAH0C,CAK1C;;AACA,QAAME,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,IAA5B,EAAhB;;AACA,OAAK,IAAIC,MAAT,IAAmBJ,OAAnB,EAA4B;AAC1B,UAAMK,OAAO,GAAGN,cAAc,CAACK,MAAD,CAA9B;AACAvB,QAAI,CAACM,MAAL,CAAYiB,MAAZ;AACAvB,QAAI,CAACM,MAAL,CAAYkB,OAAZ;AACD;;AAED,SAAOxB,IAAI,CAACe,MAAL,CAAY,KAAZ,CAAP;AACD,CAfD,C","file":"/packages/webapp-hashing.js","sourcesContent":["import { createHash } from \"crypto\";\n\nWebAppHashing = {};\n\n// Calculate a hash of all the client resources downloaded by the\n// browser, including the application HTML, runtime config, code, and\n// static files.\n//\n// This hash *must* change if any resources seen by the browser\n// change, and ideally *doesn't* change for any server-only changes\n// (but the second is a performance enhancement, not a hard\n// requirement).\n\nWebAppHashing.calculateClientHash =\n  function (manifest, includeFilter, runtimeConfigOverride) {\n  var hash = createHash('sha1');\n\n  // Omit the old hashed client values in the new hash. These may be\n  // modified in the new boilerplate.\n  var { autoupdateVersion, autoupdateVersionRefreshable, autoupdateVersionCordova, ...runtimeCfg } = __meteor_runtime_config__;\n\n  if (runtimeConfigOverride) {\n    runtimeCfg = runtimeConfigOverride;\n  }\n\n  hash.update(JSON.stringify(runtimeCfg, 'utf8'));\n\n  manifest.forEach(function (resource) {\n      if ((! includeFilter || includeFilter(resource.type, resource.replaceable)) &&\n          (resource.where === 'client' || resource.where === 'internal')) {\n      hash.update(resource.path);\n      hash.update(resource.hash);\n    }\n  });\n  return hash.digest('hex');\n};\n\nWebAppHashing.calculateCordovaCompatibilityHash =\n  function(platformVersion, pluginVersions) {\n  const hash = createHash('sha1');\n\n  hash.update(platformVersion);\n\n  // Sort plugins first so iteration order doesn't affect the hash\n  const plugins = Object.keys(pluginVersions).sort();\n  for (let plugin of plugins) {\n    const version = pluginVersions[plugin];\n    hash.update(plugin);\n    hash.update(version);\n  }\n\n  return hash.digest('hex');\n};\n"]}