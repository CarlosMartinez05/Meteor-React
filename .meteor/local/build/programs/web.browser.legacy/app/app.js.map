{"version":3,"sources":["meteor://ðŸ’»app/imports/api/Collections/PatientCollection.js","meteor://ðŸ’»app/imports/ui/components/Footer.jsx","meteor://ðŸ’»app/imports/ui/components/NavBar.jsx","meteor://ðŸ’»app/imports/ui/components/Patient.jsx","meteor://ðŸ’»app/imports/ui/components/PatientForm.jsx","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/client/main.jsx"],"names":["PatientCollection","Mongo","Collection","Footer","NavBar","Patient","patient","onDeleteClick","name","FirstLastName","SecondLastName","Rut","zipCode","state","county","PatientForm","_s","useForm","register","handleSubmit","errors","formState","submit","data","console","log","insert","required","validate","validateRut","deletePatient","_id","remove","App","patients","useTracker","find","sort","createdAt","fetch","map","Meteor","startup","render","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import {Mongo} from 'meteor/mongo'\n\nexport const PatientCollection = new Mongo.Collection('Patients2')","import React from \"react\";\n\n const Footer = () => {\n    \n    return(\n        <div className=\"Footer\">\n            <h1>Esto es Footer</h1>\n        </div>\n    )\n};\n\nexport default Footer;","import React from \"react\";\n\nconst NavBar = () => {\n    \n    return(\n        <div className=\"NavBar\">\n            <h1>Esto es El NavBar</h1>\n        </div>\n    )\n};\nexport default NavBar;","import React from 'react'\nimport patient from '../../api/Collections/PatientCollection'\n\n\nconst Patient = ({patient, onDeleteClick}) => {\n  return (\n    <div>\n      <tr>\n        <th>Nombre y Apellido</th>\n        <th>Rut</th>\n        <th>zipCode</th>\n        <th>County</th>\n        <th>state</th>\n        </tr>\n        <tr>\n        <td>{patient.name}-{patient.FirstLastName}-{patient.SecondLastName}</td>\n        <td>{patient.Rut}</td>\n        <td>{patient.zipCode}</td>\n        <td>{patient.state}</td>\n        <td>{patient.county}</td>\n        <button onClick={() => onDeleteClick(patient)}value=\"eliminar\">ELIMINAR</button>\n        </tr>\n      </div>  \n      )\n    };\n    \n    export default Patient;\n    \n    \n    \n   ","import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\nimport { useForm } from \"react-hook-form\";\nimport {validateRut,formatRut} from 'rutlib'\n\n\n\n\nconst PatientForm = () => {\n\n  //SetState and Const for parameters\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const submit = (data) => {\n\n    console.log(data);\n\n   PatientCollection.insert(data); \n\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(submit)}>\n        <label htmlFor=\"name\">First name </label>\n        <input\n          autoComplete=\"name\"\n          type=\"text\"\n          placeholder=\"Nombre\"\n          {...register('name', { required: true })}\n        />\n        {errors.name && <p>Se necesita Un Nombre</p>}\n        <label htmlFor=\"FirstLastName\">Apellido Materno </label>\n        <input\n          type=\"text\"\n          placeholder=\"Apellido Paterno\"\n          {...register('FirstLastName', { required: true })}\n        />\n        {errors.FirstLastName && <p>Necesitas Un Apellido Paterno</p>}\n        <label htmlFor=\"SecondLastName\" >Apellido Materno </label>\n        <input\n          type=\"text\"\n          placeholder=\"Apellido Materno\"\n        />\n        <label htmlFor=\"Rut\">Rut </label>\n        <input\n          type=\"text\"\n          placeholder=\"Rut\"\n          {...register('Rut', { required: true ,\n          validate: validateRut,\n        })}\n        />\n        {errors.Rut && <p>Se Necesita Un Rut</p>}\n        <label htmlFor=\"zipCode\">Codigo Postal </label>\n        <input\n          type=\"text\"\n          placeholder=\"Codigo Postal\"\n          {...register('zipCode', { required: true })}\n        />\n        {errors.zipCode && <p>Se Necesita Un Codigo Postal</p>}\n        <label htmlFor=\"state\" >Region </label>\n        <input\n          type=\"text\"\n          placeholder=\"Region\"\n          {...register('state', { required: true })}\n        />\n        {errors.state && <p>Se Necesita Una Region</p>}\n        <label htmlFor=\"county\" >Comuna</label>\n        <input\n          type=\"text\"\n          placerholder=\"Comuna\"\n          {...register('county', { required: true })}\n        />\n        {errors.county && <p>Se Necesita Una Comuna</p> }\n        <button type=\"submit\" >enviar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PatientForm;\n\n","import React from \"react\";\nimport { PatientCollection } from \"../api/Collections/PatientCollection\";\nimport Patient from '../ui/components/Patient';\nimport PatientForm from './components/PatientForm';\nimport {useTracker} from 'meteor/react-meteor-data';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\n\nconst deletePatient = ({_id}) => PatientCollection.remove(_id);\n\nconst App = () => {\n\n  const patients = useTracker(() => PatientCollection.find({}, { sort: { createdAt: -1 } }).fetch());\n\n\n\nreturn (\n<div>\n  <NavBar/>\n    <h1 className=\"text-3xl font-bold underline\">prueba registro Pacientes</h1>\n    <PatientForm/>\n        {patients.map(patient => <Patient key={ patient._id }patient={patient}onDeleteClick={deletePatient}/>)}\n  <Footer/>\n  </div>\n  )\n};\n\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport  App  from '/imports/ui/App';\n\nMeteor.startup(() => {\n  render(<App/>, document.getElementById('react-target'));\n});\n"]}