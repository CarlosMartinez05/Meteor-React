{"version":3,"sources":["meteor://ðŸ’»app/../src/utils/isCheckBoxInput.ts","meteor://ðŸ’»app/../src/utils/isDateObject.ts","meteor://ðŸ’»app/../src/utils/isNullOrUndefined.ts","meteor://ðŸ’»app/../src/utils/isObject.ts","meteor://ðŸ’»app/../src/logic/getEventValue.ts","meteor://ðŸ’»app/../src/logic/getNodeParentName.ts","meteor://ðŸ’»app/../src/logic/isNameInFieldArray.ts","meteor://ðŸ’»app/../src/utils/compact.ts","meteor://ðŸ’»app/../src/utils/isUndefined.ts","meteor://ðŸ’»app/../src/utils/get.ts","meteor://ðŸ’»app/../src/constants.ts","meteor://ðŸ’»app/../src/useFormContext.tsx","meteor://ðŸ’»app/../src/logic/getProxyFormState.ts","meteor://ðŸ’»app/../src/utils/isEmptyObject.ts","meteor://ðŸ’»app/../src/logic/shouldRenderFormState.ts","meteor://ðŸ’»app/../src/utils/convertToArrayPayload.ts","meteor://ðŸ’»app/../src/logic/shouldSubscribeByName.ts","meteor://ðŸ’»app/../src/useSubscribe.ts","meteor://ðŸ’»app/../src/useFormState.ts","meteor://ðŸ’»app/../src/utils/isString.ts","meteor://ðŸ’»app/../src/logic/generateWatchOutput.ts","meteor://ðŸ’»app/../src/utils/isPlainObject.ts","meteor://ðŸ’»app/../src/utils/isWeb.ts","meteor://ðŸ’»app/../src/utils/cloneObject.ts","meteor://ðŸ’»app/../src/useWatch.ts","meteor://ðŸ’»app/../src/useController.ts","meteor://ðŸ’»app/../src/controller.tsx","meteor://ðŸ’»app/../src/logic/appendErrors.ts","meteor://ðŸ’»app/../src/utils/isKey.ts","meteor://ðŸ’»app/../src/utils/stringToPath.ts","meteor://ðŸ’»app/../src/utils/set.ts","meteor://ðŸ’»app/../src/logic/focusFieldBy.ts","meteor://ðŸ’»app/../src/logic/generateId.ts","meteor://ðŸ’»app/../src/logic/getFocusFieldName.ts","meteor://ðŸ’»app/../src/logic/isWatched.ts","meteor://ðŸ’»app/../src/logic/updateFieldArrayRootError.ts","meteor://ðŸ’»app/../src/utils/isBoolean.ts","meteor://ðŸ’»app/../src/utils/isFileInput.ts","meteor://ðŸ’»app/../src/utils/isFunction.ts","meteor://ðŸ’»app/../src/utils/isMessage.ts","meteor://ðŸ’»app/../src/utils/isRadioInput.ts","meteor://ðŸ’»app/../src/utils/isRegex.ts","meteor://ðŸ’»app/../src/logic/getCheckboxValue.ts","meteor://ðŸ’»app/../src/logic/getRadioValue.ts","meteor://ðŸ’»app/../src/logic/getValidateError.ts","meteor://ðŸ’»app/../src/logic/getValueAndMessage.ts","meteor://ðŸ’»app/../src/logic/validateField.ts","meteor://ðŸ’»app/../src/utils/append.ts","meteor://ðŸ’»app/../src/utils/fillEmptyArray.ts","meteor://ðŸ’»app/../src/utils/getValidationModes.ts","meteor://ðŸ’»app/../src/utils/insert.ts","meteor://ðŸ’»app/../src/utils/move.ts","meteor://ðŸ’»app/../src/utils/prepend.ts","meteor://ðŸ’»app/../src/utils/remove.ts","meteor://ðŸ’»app/../src/utils/swap.ts","meteor://ðŸ’»app/../src/utils/unset.ts","meteor://ðŸ’»app/../src/utils/update.ts","meteor://ðŸ’»app/../src/useFieldArray.ts","meteor://ðŸ’»app/../src/utils/createSubject.ts","meteor://ðŸ’»app/../src/utils/isPrimitive.ts","meteor://ðŸ’»app/../src/utils/deepEqual.ts","meteor://ðŸ’»app/../src/utils/isHTMLElement.ts","meteor://ðŸ’»app/../src/utils/isMultipleSelect.ts","meteor://ðŸ’»app/../src/utils/isRadioOrCheckbox.ts","meteor://ðŸ’»app/../src/utils/live.ts","meteor://ðŸ’»app/../src/utils/objectHasFunction.ts","meteor://ðŸ’»app/../src/logic/getDirtyFields.ts","meteor://ðŸ’»app/../src/logic/getFieldValueAs.ts","meteor://ðŸ’»app/../src/logic/getFieldValue.ts","meteor://ðŸ’»app/../src/logic/getResolverOptions.ts","meteor://ðŸ’»app/../src/logic/getRuleValue.ts","meteor://ðŸ’»app/../src/logic/hasValidation.ts","meteor://ðŸ’»app/../src/logic/schemaErrorLookup.ts","meteor://ðŸ’»app/../src/logic/skipValidation.ts","meteor://ðŸ’»app/../src/logic/unsetEmptyArray.ts","meteor://ðŸ’»app/../src/logic/createFormControl.ts","meteor://ðŸ’»app/../src/useForm.ts"],"names":["element","type","value","Date","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","has","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","HookFormContext","React","createContext","useFormContext","_s","useContext","props","children","data","Provider","FormProvider","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","get","_key","_proxyFormState","keys","length","formStateData","isEmptyObject","find","signalName","exact","convertToArrayPayload","some","currentName","startsWith","useSubscribe","_s2","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","callback","unsubscribe","useFormState","_s3","methods","updateFormState","useState","_formState","_mounted","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","useCallback","shouldSubscribeByName","shouldRenderFormState","_subjects","state","_getDirty","_updateValid","getProxyFormState","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","window","HTMLElement","document","copy","Set","isWeb","Blob","FileList","isPlainObject","cloneObject","useWatch","_s4","fieldValues","generateWatchOutput","values","_formValues","updateValue","_getWatch","_removeUnmounted","useController","_s5","shouldUnregister","isArrayField","isNameInFieldArray","array","_registerProps","register","rules","updateMounted","field","_fields","_f","mount","_shouldUnregisterField","_options","_stateFlags","action","unregister","getEventValue","ref","elm","focus","select","setCustomValidity","message","reportValidity","fieldState","defineProperties","invalid","enumerable","isTouched","error","Controller","_s6","render","validateAllFieldCriteria","types","test","input","replace","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","currentField","refs","d","performance","now","c","r","Math","random","toString","options","shouldFocus","focusName","focusIndex","isBlurEvent","watchName","slice","fieldArrayErrors","set","isValidElement","RegExp","defaultResult","validResult","option","attributes","defaultReturn","previous","getValidateError","isMessage","every","isBoolean","validationData","isRegex","inputValue","shouldUseNativeValidation","isFieldArray","valueAsNumber","inputRef","isRadio","isRadioInput","isCheckBox","isRadioOrCheckbox","isEmpty","isFileInput","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getCheckboxValue","getRadioValue","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","append","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","sort","a","b","indexA","indexB","baseGet","updatePath","isEmptyArray","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","useFieldArray","_s7","keyName","setFields","_getFieldArray","ids","generateId","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","_updateFieldArray","appendValue","appendAt","getFocusFieldName","argA","fillEmptyArray","prependValue","prependAt","remove","removeArrayAt","insert","insertValue","insertAt","argB","swap","swapArrayAt","move","moveArrayAt","update","updateAt","isWatched","getValidationModes","isSubmitted","resolver","_executeSchema","then","existingError","validateField","criteriaMode","updateFieldArrayRootError","useMemo","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","owner","ownerDocument","ElementClass","defaultView","isHTMLElement","isConnected","markFieldsDirty","isParentNodeArray","objectHasFunction","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","setValueAs","NaN","files","isMultipleSelect","selectedOptions","getFieldValueAs","rule","source","join","foundError","pop","reValidateMode","defaultOptions","shouldFocusError","submitCount","isSubmitting","isSubmitSuccessful","unMount","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","executeBuiltInValidation","method","args","shouldSetValues","shouldUpdateFieldsAndState","unsetEmptyArray","getDirtyFields","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","getFieldValue","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","previousFieldError","shouldUpdateValid","delayError","updatedFormState","v","context","getResolverOptions","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","live","getValues","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","shouldSkipValidation","hasValidation","deps","skipValidation","watched","previousErrorLookupResult","schemaErrorLookup","errorLookupResult","fieldNames","Promise","getFieldState","clearErrors","inputName","setError","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","disabledIsDefined","getRuleValue","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","keepDirtyValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","_s8","_formControl","createFormControl","useForm"],"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","file":"/packages/modules.js","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.callback,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) â€¢ [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    callback: React.useCallback(\n      (value: { name?: InternalFieldName }) =>\n        _mounted.current &&\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          value.name,\n          exact,\n        ) &&\n        shouldRenderFormState(value, _localProxyFormState.current) &&\n        updateFormState({\n          ...control._formState,\n          ...value,\n        }),\n      [control, exact],\n    ),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    const isDirty = control._proxyFormState.isDirty && control._getDirty();\n\n    if (isDirty !== control._formState.isDirty) {\n      control._subjects.state.next({\n        isDirty,\n      });\n    }\n    control._updateValid();\n\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  _names.watchAll = !!isGlobal;\n\n  return formValues;\n};\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport isUndefined from './utils/isUndefined';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: (formState: {\n      name?: InternalFieldName;\n      values?: FieldValues;\n    }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        const fieldValues = generateWatchOutput(\n          _name.current as InternalFieldName,\n          control._names,\n          formState.values || control._formValues,\n        );\n\n        updateValue(\n          isUndefined(fieldValues) ? defaultValue : cloneObject(fieldValues),\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) â€¢ [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n    }),\n  );\n\n  React.useEffect(() => {\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(\n        (event) =>\n          _registerProps.current.onChange({\n            target: {\n              value: getEventValue(event),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.CHANGE,\n          }),\n        [name],\n      ),\n      onBlur: React.useCallback(\n        () =>\n          _registerProps.current.onBlur({\n            target: {\n              value: get(control._formValues, name),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.BLUR,\n          }),\n        [name, control],\n      ),\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: Object.defineProperties(\n      {},\n      {\n        invalid: {\n          enumerable: true,\n          get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n          enumerable: true,\n          get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n          enumerable: true,\n          get: () => !!get(formState.touchedFields, name),\n        },\n        error: {\n          enumerable: true,\n          get: () => get(formState.errors, name),\n        },\n      },\n    ) as ControllerFieldState,\n  };\n}\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) â€¢ [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...data, ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) && isEmptyArray(objectRef)))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport isWatched from './logic/isWatched';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport getValidationModes from './utils/getValidationModes';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. â€¢ [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) â€¢ [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  props.rules &&\n    (control as Control).register(\n      name as FieldPath<TFieldValues>,\n      props.rules as RegisterOptions<TFieldValues>,\n    );\n\n  const callback = React.useCallback(\n    ({\n      values,\n      name: fieldArrayName,\n    }: {\n      values?: FieldValues;\n      name?: InternalFieldName;\n    }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    [],\n  );\n\n  useSubscribe({\n    callback,\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    isWatched(name, control._names) && control._subjects.state.next({});\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted)\n    ) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError ? !error && existingError.type : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (field && field._f) {\n          validateField(\n            field,\n            get(control._formValues, name),\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(\n        control._fields,\n        (key) => !!key && key.startsWith(control._names.focus),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","export default (value: unknown): value is HTMLElement => {\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  const ElementClass =\n    owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\n  return value instanceof ElementClass;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        deepEqual(data[key], formValues[key])\n          ? delete dirtyFieldsFromValues[key]\n          : (dirtyFieldsFromValues[key] = true);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues = cloneObject(_options.defaultValues) || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(callback, wait);\n    };\n\n  const _updateValid = async () => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (_proxyFormState.isDirty) {\n      isPreviousDirty = _formState.isDirty;\n      _formState.isDirty = output.isDirty = _getDirty();\n      shouldUpdateField = isPreviousDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField =\n        shouldUpdateField || isPreviousDirty !== !isCurrentFieldPristine;\n    }\n\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          (_proxyFormState.touchedFields &&\n            isPreviousFieldTouched !== isBlurEvent);\n      }\n    }\n\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (\n      _proxyFormState.isValidating &&\n      !Object.values(validateFields).some((v) => v)\n    ) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as TFieldValues,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            get(_formValues, _f.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_stateFlags.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n          ? _defaultValues\n          : isString(names)\n          ? { [names]: defaultValue }\n          : defaultValue),\n      },\n      isGlobal,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name]\n        ? validateFields[name] + 1\n        : 1;\n\n      _subjects.state.next({\n        isValidating: true,\n      });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        _updateValid();\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {});\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info) =>\n            name(\n              _getWatch(undefined, defaultValue as DeepPartial<TFieldValues>),\n              info as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as DeepPartial<TFieldValues>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(!!Array.isArray(get(_defaultValues, name))\n                        ? [{}]\n                        : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors;\n          fieldValues = values;\n        } else {\n          await executeBuiltInValidation(_fields);\n        }\n\n        if (isEmptyObject(_formState.errors)) {\n          _subjects.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _focusError();\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n          ? getDirtyFields(_defaultValues, formValues)\n          : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _focusError,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) â€¢ [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: React.useCallback(\n      (value: FieldValues) => {\n        if (shouldRenderFormState(value, control._proxyFormState, true)) {\n          control._formState = {\n            ...control._formState,\n            ...value,\n          };\n\n          updateFormState({ ...control._formState });\n        }\n      },\n      [control],\n    ),\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    formState.submitCount && control._focusError();\n  }, [control, formState.submitCount]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n"]}