[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"PeopleCollection.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/api/PeopleCollection.js                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n!function (module1) {\n  module1.export({\n    People: () => People\n  });\n  let Mongo;\n  module1.link(\"meteor/mongo\", {\n    Mongo(v) {\n      Mongo = v;\n    }\n\n  }, 0);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  const People = new Mongo.Collection('People');\n}.call(this, module);\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.jsx\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/App.jsx                                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n\n  }, 0);\n  let useTracker;\n  module1.link(\"meteor/react-meteor-data\", {\n    useTracker(v) {\n      useTracker = v;\n    }\n\n  }, 1);\n  let Peoples;\n  module1.link(\"./Task\", {\n    Peoples(v) {\n      Peoples = v;\n    }\n\n  }, 2);\n  let People;\n  module1.link(\"../api/PeopleCollection\", {\n    People(v) {\n      People = v;\n    }\n\n  }, 3);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  var _s = $RefreshSig$();\n\n  const App = () => {\n    _s();\n\n    const people = useTracker(() => People.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\"\n    }, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-bar\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-header\"\n    }, /*#__PURE__*/React.createElement(\"h1\", null, \"Formulario Paciente\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\"\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"tasks\"\n    }, people.map(people => /*#__PURE__*/React.createElement(Peoples, {\n      key: people._id,\n      people: people,\n      onCheckboxClick: toggleChecked,\n      onDeleteClick: deleteTask\n    })))));\n  };\n\n  _s(App, \"nhdFur1QXx2EdNcoQJsaYkvh6/0=\", false, function () {\n    return [useTracker];\n  });\n\n  _c = App;\n  module1.exportDefault(App);\n\n  /* const toggleChecked = ({ _id, isChecked }) => {\n    Tasks.update(_id, {\n      $set: {\n        isChecked: !isChecked\n      }\n    })\n  };\n   \n  const deleteTask = ({ _id }) => Tasks.remove(_id);\n  \n  const App = () => {\n    const tasks = useTracker(() => Tasks.find({}, { sort: { createdAt: -1 } }).fetch());\n  \n    return (\n      <div className=\"app\">\n        <header>\n          <div className=\"app-bar\">\n            <div className=\"app-header\">\n              <h1>Formulario Paciente</h1>\n            </div>\n          </div>\n        </header>\n  \n        <div className=\"main\">\n          <TaskForm />\n  \n          <ul className=\"tasks\">\n            {tasks.map(task => (\n              <Task\n                key={task._id}\n                task={task}\n                onCheckboxClick={toggleChecked}\n                onDeleteClick={deleteTask}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  \n  };\n  \n  export default App; */\n  var _c;\n\n  $RefreshReg$(_c, \"App\");\n}.call(this, module);\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.jsx\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/Task.jsx                                                                              //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n!function (module1) {\n  module1.export({\n    Peoples: () => Peoples\n  });\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n\n  }, 0);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  const Peoples = _ref => {\n    let {\n      people,\n      onCheckboxClick,\n      onDeleteClick\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: !!task.isChecked,\n      onClick: () => onCheckboxClick(people),\n      readOnly: true\n    }), /*#__PURE__*/React.createElement(\"span\", null, people.Name, people.FirsLastName, people.Rut), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => onDeleteClick(people)\n    }, \"\\xD7\"));\n  };\n\n  _c = Peoples;\n\n  var _c;\n\n  $RefreshReg$(_c, \"Peoples\");\n}.call(this, module);\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.jsx\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.jsx                                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n!function (module1) {\n  let React;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    }\n\n  }, 0);\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n\n  }, 1);\n  let render;\n  module1.link(\"react-dom\", {\n    render(v) {\n      render = v;\n    }\n\n  }, 2);\n  let App;\n  module1.link(\"/imports/ui/App\", {\n    default(v) {\n      App = v;\n    }\n\n  }, 3);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  Meteor.startup(() => {\n    render( /*#__PURE__*/React.createElement(App, null), document.getElementById('react-target'));\n  });\n}.call(this, module);\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".mjs\",\n    \".jsx\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.jsx\");","hash":"57bc7362493310855a02ee964320ae21f0590349","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/PeopleCollection.js","imports/ui/App.jsx","imports/ui/Task.jsx","client/main.jsx"],"names":["People","Mongo","Collection","App","_s","people","useTracker","find","sort","createdAt","fetch","map","_id","toggleChecked","deleteTask","Peoples","onCheckboxClick","onDeleteClick","task","isChecked","Name","FirsLastName","Rut","Meteor","startup","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEO,QAAMA,MAAM,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,QAArB,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIP,QAAMC,GAAG,GAAG,MAAM;AAAAC;;AAChB,UAAMC,MAAM,GAAGC,UAAU,CAAC,MAAMN,MAAM,CAACO,IAAPP,CAAY,EAAZA,EAAgB;AAAEQ,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAhBT,EAA6CU,KAA7CV,EAAP,CAAzB;AAEA,wBACE;AAAK,iBAAU;AAAf,oBACE,iDACE;AAAK,iBAAU;AAAf,oBACE;AAAK,iBAAU;AAAf,oBACE,sDADF,CADF,CADF,CADF,eASE;AAAK,iBAAU;AAAf,oBAGE;AAAI,iBAAU;AAAd,OACGK,MAAM,CAACM,GAAPN,CAAWA,MAAM,iBAChB,oBAAC,OAAD;AACE,WAAKA,MAAM,CAACO,GADd;AAEE,cAAQP,MAFV;AAGE,uBAAiBQ,aAHnB;AAIE,qBAAeC;AAJjB,MADDT,CADH,CAHF,CATF,CADF;AAHF;;KAAMF,K;YACWG;;;OADXH;wBAgCSA;;AAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFO,QAAMY,OAAO,GAAG,QAAgD;AAAA,QAA/C;AAAEV,YAAF;AAAUW,qBAAV;AAA2BC;AAA3B,KAA+C;AACrE,wBACE,6CACE;AACE,YAAK,UADP;AAEE,eAAS,CAAC,CAACC,IAAI,CAACC,SAFlB;AAGE,eAAS,MAAMH,eAAe,CAACX,MAAD,CAHhC;AAIE,cAJF;AAAA,MADF,eAOE,kCAAOA,MAAM,CAACe,IAAd,EAAoBf,MAAM,CAACgB,YAA3B,EAAyChB,MAAM,CAACiB,GAAhD,CAPF,eAQE;AAAQ,eAAU,MAAML,aAAa,CAACZ,MAAD;AAArC,cARF,CADF;AADK;;OAAMU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGbQ,QAAM,CAACC,OAAPD,CAAe,MAAM;AACnBE,UAAM,eAAC,oBAAC,GAAD,OAAD,EAASC,QAAQ,CAACC,cAATD,CAAwB,cAAxBA,CAAT,CAAND;AADF","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const People = new Mongo.Collection('People');","import React from 'react';\nimport { useTracker } from 'meteor/react-meteor-data';\n/* import { Tasks } from '../api/TasksCollection';\nimport { TaskForm } from './TaskForm';*/\nimport { Peoples } from './Task';\nimport { People } from '../api/PeopleCollection';\nconst App = () => {\n  const people = useTracker(() => People.find({}, { sort: { createdAt: -1 } }).fetch());\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div className=\"app-bar\">\n          <div className=\"app-header\">\n            <h1>Formulario Paciente</h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"main\">\n        {/* <TaskForm /> */}\n\n        <ul className=\"tasks\">\n          {people.map(people => (\n            <Peoples\n              key={people._id}\n              people={people}\n              onCheckboxClick={toggleChecked}\n              onDeleteClick={deleteTask}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n};\n\nexport default App; \n\n\n\n\n/* const toggleChecked = ({ _id, isChecked }) => {\n  Tasks.update(_id, {\n    $set: {\n      isChecked: !isChecked\n    }\n  })\n};\n \nconst deleteTask = ({ _id }) => Tasks.remove(_id);\n\nconst App = () => {\n  const tasks = useTracker(() => Tasks.find({}, { sort: { createdAt: -1 } }).fetch());\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div className=\"app-bar\">\n          <div className=\"app-header\">\n            <h1>Formulario Paciente</h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"main\">\n        <TaskForm />\n\n        <ul className=\"tasks\">\n          {tasks.map(task => (\n            <Task\n              key={task._id}\n              task={task}\n              onCheckboxClick={toggleChecked}\n              onDeleteClick={deleteTask}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n};\n\nexport default App; */","import React from 'react';\n\nexport const Peoples = ({ people, onCheckboxClick, onDeleteClick }) => {\n  return (\n    <li>\n      <input\n        type=\"checkbox\"\n        checked={!!task.isChecked}\n        onClick={() => onCheckboxClick(people)}\n        readOnly\n      />\n      <span>{people.Name}{people.FirsLastName}{people.Rut}</span>\n      <button onClick={ () => onDeleteClick(people) }>&times;</button>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport  App  from '/imports/ui/App';\n\nMeteor.startup(() => {\n  render(<App/>, document.getElementById('react-target'));\n});\n"]}}]