[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"links.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/links.js                                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  LinksCollection: () => LinksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst LinksCollection = new Mongo.Collection('links');\n///////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet LinksCollection;\nmodule.link(\"/imports/api/links\", {\n  LinksCollection(v) {\n    LinksCollection = v;\n  }\n\n}, 1);\n\nfunction insertLink(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      title,\n      url\n    } = _ref;\n    Promise.await(LinksCollection.insertAsync({\n      title,\n      url,\n      createdAt: new Date()\n    }));\n  });\n}\n\nMeteor.startup(() => Promise.asyncApply(() => {\n  // If the Links collection is empty, add some data.\n  if (Promise.await(LinksCollection.find().countAsync()) === 0) {\n    Promise.await(insertLink({\n      title: 'Do the Tutorial',\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app'\n    }));\n    Promise.await(insertLink({\n      title: 'Follow the Guide',\n      url: 'https://guide.meteor.com'\n    }));\n    Promise.await(insertLink({\n      title: 'Read the Docs',\n      url: 'https://docs.meteor.com'\n    }));\n    Promise.await(insertLink({\n      title: 'Discussions',\n      url: 'https://forums.meteor.com'\n    }));\n  }\n}));\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"781f77188266eb4af5cdb992add0c95847d6bc64","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/links.js","server/main.js"],"names":["module","export","LinksCollection","Mongo","link","v","Collection","Meteor","insertLink","title","url","insertAsync","createdAt","Date","startup","find","countAsync"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,iBAAe,EAAC,MAAIA;AAArB,CAAd;AAAqD,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAExD,MAAMH,eAAe,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,OAArB,CAAxB,C;;;;;;;;;;;ACFP,IAAIC,MAAJ;AAAWP,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACF,CAAD,EAAG;AAACE,UAAM,GAACF,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,eAAJ;AAAoBF,MAAM,CAACI,IAAP,CAAY,oBAAZ,EAAiC;AAACF,iBAAe,CAACG,CAAD,EAAG;AAACH,mBAAe,GAACG,CAAhB;AAAkB;;AAAtC,CAAjC,EAAyE,CAAzE;;AAGpF,SAAeG,UAAf;AAAA,kCAA0C;AAAA,QAAhB;AAAEC,WAAF;AAASC;AAAT,KAAgB;AACxC,kBAAMR,eAAe,CAACS,WAAhB,CAA4B;AAAEF,WAAF;AAASC,SAAT;AAAcE,eAAS,EAAE,IAAIC,IAAJ;AAAzB,KAA5B,CAAN;AACD,GAFD;AAAA;;AAIAN,MAAM,CAACO,OAAP,CAAe,+BAAY;AACzB;AACA,MAAI,cAAMZ,eAAe,CAACa,IAAhB,GAAuBC,UAAvB,EAAN,MAA8C,CAAlD,EAAqD;AACnD,kBAAMR,UAAU,CAAC;AACfC,WAAK,EAAE,iBADQ;AAEfC,SAAG,EAAE;AAFU,KAAD,CAAhB;AAKA,kBAAMF,UAAU,CAAC;AACfC,WAAK,EAAE,kBADQ;AAEfC,SAAG,EAAE;AAFU,KAAD,CAAhB;AAKA,kBAAMF,UAAU,CAAC;AACfC,WAAK,EAAE,eADQ;AAEfC,SAAG,EAAE;AAFU,KAAD,CAAhB;AAKA,kBAAMF,UAAU,CAAC;AACfC,WAAK,EAAE,aADQ;AAEfC,SAAG,EAAE;AAFU,KAAD,CAAhB;AAID;AACF,CAvBc,CAAf,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const LinksCollection = new Mongo.Collection('links');\n","import { Meteor } from 'meteor/meteor';\nimport { LinksCollection } from '/imports/api/links';\n\nasync function insertLink({ title, url }) {\n  await LinksCollection.insertAsync({ title, url, createdAt: new Date() });\n}\n\nMeteor.startup(async () => {\n  // If the Links collection is empty, add some data.\n  if (await LinksCollection.find().countAsync() === 0) {\n    await insertLink({\n      title: 'Do the Tutorial',\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app',\n    });\n\n    await insertLink({\n      title: 'Follow the Guide',\n      url: 'https://guide.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Read the Docs',\n      url: 'https://docs.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Discussions',\n      url: 'https://forums.meteor.com',\n    });\n  }\n});\n"]}}]