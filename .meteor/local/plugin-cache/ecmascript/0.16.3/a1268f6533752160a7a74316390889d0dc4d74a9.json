{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/components/PatientForm.jsx","filename":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","inputSourceMap":{"version":3,"sources":["imports/ui/components/PatientForm.jsx"],"names":["React","useState","PatientCollection","useForm","PatientForm","name","setName","FirstLastName","setFirstLastName","SecondLastName","setSecondLastName","Rut","setRut","zipCode","setZipCode","state","setState","county","setCounty","register","handleSubmit","formState","errors","submit","data","preventDefault","insert","required","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\nimport { useForm } from \"react-hook-form\";\n\n const PatientForm = () => {\n \n //SetState and Const for parameters\n  const [name, setName] = useState(\"\");\n  const [FirstLastName,setFirstLastName ] = useState(\"\");\n  const [SecondLastName,setSecondLastName ] = useState(\"\");\n  const [Rut,setRut ] = useState(\"\");\n  const [zipCode,setZipCode ] = useState(\"\");\n  const [state,setState ] = useState(\"\");\n  const [county,setCounty ] = useState(\"\");\n\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const  submit = async (data) => {\n     \n     await data.preventDefault();\n\n    if (!Rut) return;\n\n    PatientCollection.insert({\n     name, FirstLastName, SecondLastName, Rut, zipCode, state, county,\n    });\n\n    setName(\"\");\n    setFirstLastName(\"\")\n    setSecondLastName(\"\")\n    setRut(\"\")\n    setZipCode(\"\")\n    setState(\"\")\n    setCounty(\"\")\n  };\n \n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit(submit)}>\n      <input\n        type=\"text\"\n        placeholder=\"Type to Name\"\n        value={name}\n        {...register('name', {required: true})}\n        onChange={(e) => setName(e.target.value)}\n      />\n      {errors.name && <p>Se necesita Un Nombre</p>}\n      <input\n        type=\"text\"\n        placeholder=\"Type firstLastName\"\n        value={FirstLastName}\n        {...register('FirstLastName', {required: true})}\n        onChange={(e) => setFirstLastName(e.target.value)}\n      />\n      {errors.FirstLastName && <p>Necesitas Un Apellido Paterno</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Type Second Last Name\"\n        value={SecondLastName}\n        onChange={(e) => setSecondLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to rut\"\n        value={Rut}\n        {...register('Rut', {required: true})}\n        onChange={(e) => setRut(e.target.value)}\n      />\n      {errors.Rut && <p>Se Necesita Un Rut</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Type to zip code\"\n        value={zipCode}\n        {...register('zipCode', {required: true})}\n        onChange={(e) => setZipCode(e.target.value)}\n      />\n      {errors.zipCode && <p>Se Necesita Un Codigo Postal</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Select Your State\"\n        value={state}\n        {...register('state', {required: true})}\n        onChange={(e) => setState(e.target.value)}\n      />\n      {errors.state && <p>Se Necesita Una Region</p>}\n       <input\n        type=\"text\"\n        placerholder=\"Select Your County\"\n        value={county}\n        {...register('county', {required: true})}\n        onChange={(e) => setCounty(e.target.value)}\n      />\n      {errors.county && <p>Se Necesita Una Comuna</p>}\n\n      <button type=\"submit\">enviar</button>\n    </form>\n  );\n};\n\nexport default PatientForm;\n\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/carlos/Prueba-docmovi/FormDocMovi","root":"/home/carlos/Prueba-docmovi/FormDocMovi","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/components/PatientForm.jsx"}},"code":"!function (module1) {\n  let _extends;\n\n  module1.link(\"@babel/runtime/helpers/extends\", {\n    default(v) {\n      _extends = v;\n    }\n\n  }, 0);\n  let React, useState;\n  module1.link(\"react\", {\n    default(v) {\n      React = v;\n    },\n\n    useState(v) {\n      useState = v;\n    }\n\n  }, 0);\n  let PatientCollection;\n  module1.link(\"../../api/Collections/PatientCollection\", {\n    PatientCollection(v) {\n      PatientCollection = v;\n    }\n\n  }, 1);\n  let useForm;\n  module1.link(\"react-hook-form\", {\n    useForm(v) {\n      useForm = v;\n    }\n\n  }, 2);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  var _s = $RefreshSig$();\n\n  const PatientForm = () => {\n    _s(); //SetState and Const for parameters\n\n\n    const [name, setName] = useState(\"\");\n    const [FirstLastName, setFirstLastName] = useState(\"\");\n    const [SecondLastName, setSecondLastName] = useState(\"\");\n    const [Rut, setRut] = useState(\"\");\n    const [zipCode, setZipCode] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [county, setCounty] = useState(\"\");\n    const {\n      register,\n      handleSubmit,\n      formState: {\n        errors\n      }\n    } = useForm();\n\n    const submit = async data => {\n      await data.preventDefault();\n      if (!Rut) return;\n      PatientCollection.insert({\n        name,\n        FirstLastName,\n        SecondLastName,\n        Rut,\n        zipCode,\n        state,\n        county\n      });\n      setName(\"\");\n      setFirstLastName(\"\");\n      setSecondLastName(\"\");\n      setRut(\"\");\n      setZipCode(\"\");\n      setState(\"\");\n      setCounty(\"\");\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"task-form\",\n      onSubmit: handleSubmit(submit)\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placeholder: \"Type to Name\",\n      value: name\n    }, register('name', {\n      required: true\n    }), {\n      onChange: e => setName(e.target.value)\n    })), errors.name && /*#__PURE__*/React.createElement(\"p\", null, \"Se necesita Un Nombre\"), /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placeholder: \"Type firstLastName\",\n      value: FirstLastName\n    }, register('FirstLastName', {\n      required: true\n    }), {\n      onChange: e => setFirstLastName(e.target.value)\n    })), errors.FirstLastName && /*#__PURE__*/React.createElement(\"p\", null, \"Necesitas Un Apellido Paterno\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type Second Last Name\",\n      value: SecondLastName,\n      onChange: e => setSecondLastName(e.target.value)\n    }), /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placeholder: \"Type to rut\",\n      value: Rut\n    }, register('Rut', {\n      required: true\n    }), {\n      onChange: e => setRut(e.target.value)\n    })), errors.Rut && /*#__PURE__*/React.createElement(\"p\", null, \"Se Necesita Un Rut\"), /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placeholder: \"Type to zip code\",\n      value: zipCode\n    }, register('zipCode', {\n      required: true\n    }), {\n      onChange: e => setZipCode(e.target.value)\n    })), errors.zipCode && /*#__PURE__*/React.createElement(\"p\", null, \"Se Necesita Un Codigo Postal\"), /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placeholder: \"Select Your State\",\n      value: state\n    }, register('state', {\n      required: true\n    }), {\n      onChange: e => setState(e.target.value)\n    })), errors.state && /*#__PURE__*/React.createElement(\"p\", null, \"Se Necesita Una Region\"), /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"text\",\n      placerholder: \"Select Your County\",\n      value: county\n    }, register('county', {\n      required: true\n    }), {\n      onChange: e => setCounty(e.target.value)\n    })), errors.county && /*#__PURE__*/React.createElement(\"p\", null, \"Se Necesita Una Comuna\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\"\n    }, \"enviar\"));\n  };\n\n  _s(PatientForm, \"EkJhh2U/X4Rw/z0OTPtfP16NwwQ=\", false, function () {\n    return [useForm];\n  });\n\n  _c = PatientForm;\n  module1.exportDefault(PatientForm);\n\n  var _c;\n\n  $RefreshReg$(_c, \"PatientForm\");\n}.call(this, module);","map":{"version":3,"mappings":"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","names":["PatientForm","_s","name","setName","useState","FirstLastName","setFirstLastName","SecondLastName","setSecondLastName","Rut","setRut","zipCode","setZipCode","state","setState","county","setCounty","register","handleSubmit","formState","errors","useForm","submit","data","preventDefault","PatientCollection","insert","required","e","target","value"],"sources":["imports/ui/components/PatientForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\nimport { useForm } from \"react-hook-form\";\n\n const PatientForm = () => {\n \n //SetState and Const for parameters\n  const [name, setName] = useState(\"\");\n  const [FirstLastName,setFirstLastName ] = useState(\"\");\n  const [SecondLastName,setSecondLastName ] = useState(\"\");\n  const [Rut,setRut ] = useState(\"\");\n  const [zipCode,setZipCode ] = useState(\"\");\n  const [state,setState ] = useState(\"\");\n  const [county,setCounty ] = useState(\"\");\n\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const  submit = async (data) => {\n     \n     await data.preventDefault();\n\n    if (!Rut) return;\n\n    PatientCollection.insert({\n     name, FirstLastName, SecondLastName, Rut, zipCode, state, county,\n    });\n\n    setName(\"\");\n    setFirstLastName(\"\")\n    setSecondLastName(\"\")\n    setRut(\"\")\n    setZipCode(\"\")\n    setState(\"\")\n    setCounty(\"\")\n  };\n \n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit(submit)}>\n      <input\n        type=\"text\"\n        placeholder=\"Type to Name\"\n        value={name}\n        {...register('name', {required: true})}\n        onChange={(e) => setName(e.target.value)}\n      />\n      {errors.name && <p>Se necesita Un Nombre</p>}\n      <input\n        type=\"text\"\n        placeholder=\"Type firstLastName\"\n        value={FirstLastName}\n        {...register('FirstLastName', {required: true})}\n        onChange={(e) => setFirstLastName(e.target.value)}\n      />\n      {errors.FirstLastName && <p>Necesitas Un Apellido Paterno</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Type Second Last Name\"\n        value={SecondLastName}\n        onChange={(e) => setSecondLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to rut\"\n        value={Rut}\n        {...register('Rut', {required: true})}\n        onChange={(e) => setRut(e.target.value)}\n      />\n      {errors.Rut && <p>Se Necesita Un Rut</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Type to zip code\"\n        value={zipCode}\n        {...register('zipCode', {required: true})}\n        onChange={(e) => setZipCode(e.target.value)}\n      />\n      {errors.zipCode && <p>Se Necesita Un Codigo Postal</p>}\n       <input\n        type=\"text\"\n        placeholder=\"Select Your State\"\n        value={state}\n        {...register('state', {required: true})}\n        onChange={(e) => setState(e.target.value)}\n      />\n      {errors.state && <p>Se Necesita Una Region</p>}\n       <input\n        type=\"text\"\n        placerholder=\"Select Your County\"\n        value={county}\n        {...register('county', {required: true})}\n        onChange={(e) => setCounty(e.target.value)}\n      />\n      {errors.county && <p>Se Necesita Una Comuna</p>}\n\n      <button type=\"submit\">enviar</button>\n    </form>\n  );\n};\n\nexport default PatientForm;\n\n"]},"sourceType":"module","externalDependencies":{},"hash":"a1268f6533752160a7a74316390889d0dc4d74a9"}
