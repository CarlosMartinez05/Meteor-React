{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/ui/components/PatientForm.jsx","filename":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","inputSourceMap":{"version":3,"sources":["imports/ui/components/PatientForm.jsx"],"names":["React","useState","PatientCollection","PatientForm","name","setName","FirstLastName","setFirstLastName","SecondLastName","setSecondLastName","Rut","setRut","zipCode","setZipcode","state","setState","county","setCounty","handleSubmit","e","preventDefault","insert","target","value","setZipCode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\n\n\n const PatientForm = () => {\n  const [name, setName] = useState(\"\");\n  const [FirstLastName,setFirstLastName ] = useState(\"\");\n  const [SecondLastName,setSecondLastName ] = useState(\"\");\n  const [Rut,setRut ] = useState(\"\");\n  const [zipCode,setZipcode ] = useState(\"\");\n  const [state,setState ] = useState(\"\");\n  const [county,setCounty ] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) return;\n\n    PatientCollection.insert({\n     name, FirstLastName, SecondLastName, Rut, zipCode, state, county,\n    });\n\n    setName(\"\");\n    setFirstLastName(\"\")\n    setSecondLastName(\"\")\n    setRut(\"\")\n    setZipcode(\"\")\n    setState(\"\")\n    setCounty(\"\")\n  };\n \n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Type to Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Type firstLastName\"\n        value={FirstLastName}\n        onChange={(e) => setFirstLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type Second Last Name\"\n        value={SecondLastName}\n        onChange={(e) => setSecondLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to rut\"\n        value={Rut}\n        onChange={(e) => setRut(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to zip code\"\n        value={zipCode}\n        onChange={(e) => setZipCode(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Select Your State\"\n        value={state}\n        onChange={(e) => setState(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placerholder=\"Select Your County\"\n        value={county}\n        onChange={(e) => setCounty(e.target.value)}\n      />\n\n      <button type=\"submit\" /* value={handleSubmit} */>Add Task</button>\n    </form>\n  );\n};\n\nexport default PatientForm;\n\n\n/* import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\n\n\nexport const PatientForm = () => {\n    const [name, setNameState] = useState(\"\");\n\n\n    const submit = (data, formRef) => {\n        let insertError;\n        const {\n            name,\n        } = data;\n        StudentData.insert(\n            {\n                name,\n            },\n            (error) => { insertError = error; },\n        );\n        if (insertError) {\n            console.log(insertError)\n        } else {\n            console.log(\"Create Patient\")\n            setNameState(name);\n            formRef.reset();\n        }\n    };\n\nreturn (\n    <div>\n        <form className=\"task-form\">\n            <input\n                type=\"name\"\n                placeholder=\"Type your name\"\n            />\n\n            <button type=\"submit\" value={submit}>Add Task</button>\n        </form>\n    </div>\n);\n};\n */"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/carlos/Prueba-docmovi/FormDocMovi","root":"/home/carlos/Prueba-docmovi/FormDocMovi","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/carlos/Prueba-docmovi/FormDocMovi/imports/ui/components/PatientForm.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/components/PatientForm.jsx"}},"code":"!function (module1) {\n  var _slicedToArray;\n\n  module1.link(\"@babel/runtime/helpers/slicedToArray\", {\n    default: function (v) {\n      _slicedToArray = v;\n    }\n  }, 0);\n  var React, useState;\n  module1.link(\"react\", {\n    \"default\": function (v) {\n      React = v;\n    },\n    useState: function (v) {\n      useState = v;\n    }\n  }, 0);\n  var PatientCollection;\n  module1.link(\"../../api/Collections/PatientCollection\", {\n    PatientCollection: function (v) {\n      PatientCollection = v;\n    }\n  }, 1);\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  var _s = $RefreshSig$();\n\n  var PatientForm = function () {\n    _s();\n\n    var _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n    var _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        FirstLastName = _useState4[0],\n        setFirstLastName = _useState4[1];\n\n    var _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        SecondLastName = _useState6[0],\n        setSecondLastName = _useState6[1];\n\n    var _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Rut = _useState8[0],\n        setRut = _useState8[1];\n\n    var _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        zipCode = _useState10[0],\n        setZipcode = _useState10[1];\n\n    var _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        state = _useState12[0],\n        setState = _useState12[1];\n\n    var _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        county = _useState14[0],\n        setCounty = _useState14[1];\n\n    var handleSubmit = function (e) {\n      e.preventDefault();\n      if (!name) return;\n      PatientCollection.insert({\n        name: name,\n        FirstLastName: FirstLastName,\n        SecondLastName: SecondLastName,\n        Rut: Rut,\n        zipCode: zipCode,\n        state: state,\n        county: county\n      });\n      setName(\"\");\n      setFirstLastName(\"\");\n      setSecondLastName(\"\");\n      setRut(\"\");\n      setZipcode(\"\");\n      setState(\"\");\n      setCounty(\"\");\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"task-form\",\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type to Name\",\n      value: name,\n      onChange: function (e) {\n        return setName(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type firstLastName\",\n      value: FirstLastName,\n      onChange: function (e) {\n        return setFirstLastName(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type Second Last Name\",\n      value: SecondLastName,\n      onChange: function (e) {\n        return setSecondLastName(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type to rut\",\n      value: Rut,\n      onChange: function (e) {\n        return setRut(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type to zip code\",\n      value: zipCode,\n      onChange: function (e) {\n        return setZipCode(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Select Your State\",\n      value: state,\n      onChange: function (e) {\n        return setState(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placerholder: \"Select Your County\",\n      value: county,\n      onChange: function (e) {\n        return setCounty(e.target.value);\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\"\n      /* value={handleSubmit} */\n\n    }, \"Add Task\"));\n  };\n\n  _s(PatientForm, \"vYdyt6IS0iBV9J1vQsdScETeE0U=\");\n\n  _c = PatientForm;\n  module1.exportDefault(PatientForm);\n\n  /* import React, { useState } from 'react';\n  import { PatientCollection } from '../../api/Collections/PatientCollection';\n  \n  \n  export const PatientForm = () => {\n      const [name, setNameState] = useState(\"\");\n  \n  \n      const submit = (data, formRef) => {\n          let insertError;\n          const {\n              name,\n          } = data;\n          StudentData.insert(\n              {\n                  name,\n              },\n              (error) => { insertError = error; },\n          );\n          if (insertError) {\n              console.log(insertError)\n          } else {\n              console.log(\"Create Patient\")\n              setNameState(name);\n              formRef.reset();\n          }\n      };\n  \n  return (\n      <div>\n          <form className=\"task-form\">\n              <input\n                  type=\"name\"\n                  placeholder=\"Type your name\"\n              />\n  \n              <button type=\"submit\" value={submit}>Add Task</button>\n          </form>\n      </div>\n  );\n  };\n   */\n  var _c;\n\n  $RefreshReg$(_c, \"PatientForm\");\n}.call(this, module);","map":{"version":3,"mappings":"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","names":["PatientForm","_s","useState","name","setName","FirstLastName","setFirstLastName","SecondLastName","setSecondLastName","Rut","setRut","zipCode","setZipcode","state","setState","county","setCounty","handleSubmit","e","preventDefault","PatientCollection","insert","target","value","setZipCode"],"sources":["imports/ui/components/PatientForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\n\n\n const PatientForm = () => {\n  const [name, setName] = useState(\"\");\n  const [FirstLastName,setFirstLastName ] = useState(\"\");\n  const [SecondLastName,setSecondLastName ] = useState(\"\");\n  const [Rut,setRut ] = useState(\"\");\n  const [zipCode,setZipcode ] = useState(\"\");\n  const [state,setState ] = useState(\"\");\n  const [county,setCounty ] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) return;\n\n    PatientCollection.insert({\n     name, FirstLastName, SecondLastName, Rut, zipCode, state, county,\n    });\n\n    setName(\"\");\n    setFirstLastName(\"\")\n    setSecondLastName(\"\")\n    setRut(\"\")\n    setZipcode(\"\")\n    setState(\"\")\n    setCounty(\"\")\n  };\n \n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Type to Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Type firstLastName\"\n        value={FirstLastName}\n        onChange={(e) => setFirstLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type Second Last Name\"\n        value={SecondLastName}\n        onChange={(e) => setSecondLastName(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to rut\"\n        value={Rut}\n        onChange={(e) => setRut(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Type to zip code\"\n        value={zipCode}\n        onChange={(e) => setZipCode(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placeholder=\"Select Your State\"\n        value={state}\n        onChange={(e) => setState(e.target.value)}\n      />\n       <input\n        type=\"text\"\n        placerholder=\"Select Your County\"\n        value={county}\n        onChange={(e) => setCounty(e.target.value)}\n      />\n\n      <button type=\"submit\" /* value={handleSubmit} */>Add Task</button>\n    </form>\n  );\n};\n\nexport default PatientForm;\n\n\n/* import React, { useState } from 'react';\nimport { PatientCollection } from '../../api/Collections/PatientCollection';\n\n\nexport const PatientForm = () => {\n    const [name, setNameState] = useState(\"\");\n\n\n    const submit = (data, formRef) => {\n        let insertError;\n        const {\n            name,\n        } = data;\n        StudentData.insert(\n            {\n                name,\n            },\n            (error) => { insertError = error; },\n        );\n        if (insertError) {\n            console.log(insertError)\n        } else {\n            console.log(\"Create Patient\")\n            setNameState(name);\n            formRef.reset();\n        }\n    };\n\nreturn (\n    <div>\n        <form className=\"task-form\">\n            <input\n                type=\"name\"\n                placeholder=\"Type your name\"\n            />\n\n            <button type=\"submit\" value={submit}>Add Task</button>\n        </form>\n    </div>\n);\n};\n */"]},"sourceType":"module","externalDependencies":{},"hash":"0159b4e448f75e540096a01a96509be62e2f8374"}
